(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{82:function(e,t,r){"use strict";r.r(t),r.d(t,"frontMatter",(function(){return a})),r.d(t,"metadata",(function(){return c})),r.d(t,"toc",(function(){return s})),r.d(t,"default",(function(){return p}));var n=r(3),o=r(7),i=(r(0),r(88)),a={id:"event_triggers",title:"Set up event triggers"},c={unversionedId:"event_triggers",id:"event_triggers",isDocsHomePage:!1,title:"Set up event triggers",description:"BrainVision Trigger Box setup",source:"@site/docs/event_triggers.md",slug:"/event_triggers",permalink:"/honeycomb/docs/event_triggers",editUrl:"https://github.com/brown-ccv/honeycomb/edit/documentation/docs/event_triggers.md",version:"current",sidebar:"someSidebar",previous:{title:"Use installers",permalink:"/honeycomb/docs/"},next:{title:"Deploy online",permalink:"/honeycomb/docs/"}},s=[{value:"BrainVision Trigger Box setup",id:"brainvision-trigger-box-setup",children:[]},{value:"Open Source Event Trigger setup",id:"open-source-event-trigger-setup",children:[]},{value:"Send event code triggers",id:"send-event-code-triggers",children:[]}],u={toc:s};function p(e){var t=e.components,r=Object(o.a)(e,["components"]);return Object(i.b)("wrapper",Object(n.a)({},u,r,{components:t,mdxType:"MDXLayout"}),Object(i.b)("h2",{id:"brainvision-trigger-box-setup"},"BrainVision Trigger Box setup"),Object(i.b)("p",null,"Follow the TriggerBox setup instructions in the BrainVision Trigger Box manual. Plug the TriggerBox into the computer running the task. Check your operating system\u2019s device list to identify the COM port that the TriggerBox is connected to. Create a new system environment variable COMNAME, and set to the COM port to the correct value (e.g., COM3). "),Object(i.b)("h2",{id:"open-source-event-trigger-setup"},"Open Source Event Trigger setup"),Object(i.b)("p",null,"Details on how to make the open source event trigger and photodiode can be found here: ",Object(i.b)("a",{parentName:"p",href:"https://github.com/neuromotion/USB-event-marker"},"https://github.com/neuromotion/USB-event-marker"),"\nConnect the open source event trigger to the computer running the task using a USB to micro-USB cable. Check your operating system\u2019s USB device list to identify the product ID of the teensyduino event marker. Create a new system environment variable EVENT_MARKER_PRODUCT_ID and set to the product ID of the event marker. "),Object(i.b)("h2",{id:"send-event-code-triggers"},"Send event code triggers"),Object(i.b)("p",null,"Change the eventCodes values listed in the src/config/trigger.js file to the desired values. Import eventCodes from \u2018./trigger\u2019, and export as \u2018eventCodes\u2019. Whenever you would like to send an event code in a trial, load eventCodes from \u2018../config/main/\u2019 and call the pdSpotEncode function with the proper eventCode (e.g. eventCode.Fixation) as input. "))}p.isMDXComponent=!0},88:function(e,t,r){"use strict";r.d(t,"a",(function(){return g})),r.d(t,"b",(function(){return v}));var n=r(0),o=r.n(n);function i(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function c(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){i(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var u=o.a.createContext({}),p=function(e){var t=o.a.useContext(u),r=t;return e&&(r="function"==typeof e?e(t):c(c({},t),e)),r},g=function(e){var t=p(e.components);return o.a.createElement(u.Provider,{value:t},e.children)},l={inlineCode:"code",wrapper:function(e){var t=e.children;return o.a.createElement(o.a.Fragment,{},t)}},d=o.a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,i=e.originalType,a=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),g=p(r),d=n,v=g["".concat(a,".").concat(d)]||g[d]||l[d]||i;return r?o.a.createElement(v,c(c({ref:t},u),{},{components:r})):o.a.createElement(v,c({ref:t},u))}));function v(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var i=r.length,a=new Array(i);a[0]=d;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c.mdxType="string"==typeof e?e:n,a[1]=c;for(var u=2;u<i;u++)a[u]=r[u];return o.a.createElement.apply(null,a)}return o.a.createElement.apply(null,r)}d.displayName="MDXCreateElement"}}]);