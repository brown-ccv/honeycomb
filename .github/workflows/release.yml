name: release

# Runs the build and package scripts when a new tagged release is created
on:
  # TODO: Always create a release when pushing to main?
  push:
    tags:
      - "*"

jobs:
  # Package the electron application [home/clinic] in [windows/macOS/ubuntu]
  release:
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        # TODO: Home doesn't make sense here?
        location: ["home", "clinic"]
        os: [ubuntu-latest, macOS-latest, windows-latest]

    steps:
      # Set up js package
      - name: ⬇️ Checkout repo
        uses: actions/checkout@v3
      - name: ⎔ Setup node
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: npm
          cache-dependency-path: ./package.json

      - name: Set Package Version and Name
        uses: brown-ccv/gh-actions/get-package-info@main
        id: package_info

      - name: 📥 Install Dependencies
        run: npm ci

      # Build the project with the correct location
      - name: Build
        run: npm run build:${{matrix.location}}

      # Lint the project
      - name: 🔬 Lint
        run: npm run lint
      # Test the project
      - name: ⚡ Test
        run: npm run test
        env:
          CI: true

      # Package electron app package installers for the given OS(s)
      # TODO: Add zip
      # TODO: We might be able to simplify this with "publish" command https://www.electronforge.io/cli#publish
      - name: 📦 Package for Windows
        if: startsWith(matrix.os, 'windows')
        run: npm run make:windows
      - name: 📦 Package for Linux
        if: startsWith(matrix.os, 'ubuntu')
        run: npm run make:linux
      - name: 📦 Package for macOS
        if: startsWith(matrix.os, 'mac')
        run: npm run make:mac

      # Upload installers to github release
      - name: 🚀 Upload Installer to Release (Windows)
        if: startsWith(matrix.os, 'windows')
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: out/make/squirrel.windows/x64/${{ steps.package_info.outputs.package_name }}-${{ steps.package_info.outputs.package_version }} Setup.exe
          asset_name: ${{ steps.package_info.outputs.package_name }}-${{ steps.package_info.outputs.package_version }}-${{ matrix.location }}-setup.exe
          tag: ${{ github.ref }}
      - name: 🚀 Upload Installer to Release (Linux)
        if: startsWith(matrix.os, 'ubuntu')
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: out/make/deb/x64/${{ steps.package_info.outputs.package_name }}_${{ steps.package_info.outputs.package_version }}_amd64.deb
          asset_name: ${{ steps.package_info.outputs.package_name }}_${{ steps.package_info.outputs.package_version }}_${{ matrix.location }}_amd64.deb
          tag: ${{ github.ref }}
      - name: 🚀 Upload Installer to Release (macOS)
        if: startsWith(matrix.os, 'mac')
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: out/make/${{ steps.package_info.outputs.package_name }}-${{ steps.package_info.outputs.package_version }}-x64.dmg
          asset_name: ${{ steps.package_info.outputs.package_name }}-${{ steps.package_info.outputs.package_version }}-${{ matrix.location }}.dmg
          tag: ${{ github.ref }}

      # Update github pages - linux only
      # ? TODO: Remove GH pages? Can now point user to Firebase deployment
      - name: Deploy to GH Pages
        if: startsWith(matrix.os, 'ubuntu')
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./build
