name: 🚀 Release

# Runs the build and package scripts when a new tagged release is created
# Note that this runs for both releases and pre-releases: https://docs.github.com/en/actions/using-workflows/events-that-trigger-workflows#release
on:
  release:
    types: created

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: write

jobs:
  package-and-upload:
    name: Package and Upload
    runs-on: ${{ matrix.os }}

    # Run build script for [home/clinic] in [windows/macOS/ubuntu]
    strategy:
      matrix:
        os: [windows-latest, macOS-latest, ubuntu-latest]
        setting: [home, clinic]
      fail-fast: true

    steps:
      # Set up runner
      - name: ⬇️ Checkout repo
        uses: actions/checkout@v4
      - name: ⎔ Setup node
        uses: actions/setup-node@v4
        with:
          node-version-file: .nvmrc
          cache: npm

      # Install dependencies and set up environment
      - name: 📥 Install Dependencies
        run: npm ci
      - name: 🔃 Load .env file (.env.${{matrix.setting}})
        uses: xom9ikk/dotenv@v2
        with:
          path: ./env
          mode: ${{matrix.setting}}

      - name: 📦 Make app installer - Windows
        if: startsWith(matrix.os, 'windows')
        run: npm run make:windows
      - name: 📦 Make app installer - Mac
        if: startsWith(matrix.os, 'mac')
        run: npm run make:mac
      - name: 📦 Make app installer - Linux
        if: startsWith(matrix.os, 'ubuntu')
        run: npm run make:linux

      # Get package info
      - name: Get package name and version
        id: package_info
        run: |
          echo "name=$(cat package.json | jq -r '.name')" >> $GITHUB_OUTPUT
          echo "version=$(cat package.json | jq -r '.version')" >> $GITHUB_OUTPUT
        shell: bash

      # Upload installers to GitHub release
      # TODO @brown-ccv #247: Use the Publish command: https://www.electronforge.io/cli#publish
      - name: ⬆ Upload installer to release - Windows
        if: startsWith(matrix.os, 'windows')
        uses: svenstaro/upload-release-action@v2
        with:
          file: out/make/squirrel.windows/x64/${{ steps.package_info.outputs.name }}-${{ steps.package_info.outputs.version }} Setup.exe
          asset_name: ${{ steps.package_info.outputs.name }}-${{ steps.package_info.outputs.version }}-${{ matrix.setting }}-setup.exe
          tag: ${{ github.ref }}
          repo_token: ${{ secrets.GITHUB_TOKEN }}
      - name: ⬆ Upload installer to release - macOS
        if: startsWith(matrix.os, 'mac')
        uses: svenstaro/upload-release-action@v2
        with:
          file: out/make/${{ steps.package_info.outputs.name }}-${{ steps.package_info.outputs.version }}-universal.dmg
          asset_name: ${{ steps.package_info.outputs.name }}-${{ steps.package_info.outputs.version }}-${{ matrix.setting }}-universal.dmg
          tag: ${{ github.ref }}
          repo_token: ${{ secrets.GITHUB_TOKEN }}
      - name: ⬆ Upload installer to release - Linux
        if: startsWith(matrix.os, 'ubuntu')
        uses: svenstaro/upload-release-action@v2
        with:
          file: out/make/deb/x64/${{ steps.package_info.outputs.name }}_${{ steps.package_info.outputs.version }}_amd64.deb
          asset_name: ${{ steps.package_info.outputs.name }}-${{ steps.package_info.outputs.version }}-${{ matrix.setting }}-amd64.deb
          tag: ${{ github.ref }}
          repo_token: ${{ secrets.GITHUB_TOKEN }}
