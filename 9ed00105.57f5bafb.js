(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{78:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return o})),n.d(t,"metadata",(function(){return l})),n.d(t,"toc",(function(){return c})),n.d(t,"default",(function(){return p}));var r=n(3),i=n(7),a=(n(0),n(86)),o={id:"configuration",title:"Configuration"},l={unversionedId:"configuration",id:"configuration",isDocsHomePage:!1,title:"Configuration",description:"Environment Variables",source:"@site/docs/configuration.md",slug:"/configuration",permalink:"/honeycomb/docs/configuration",editUrl:"https://github.com/brown-ccv/honeycomb/edit/documentation/docs/configuration.md",version:"current"},c=[{value:"Environment Variables",id:"environment-variables",children:[]},{value:"Usage with PsiTurk",id:"usage-with-psiturk",children:[]}],u={toc:c};function p(e){var t=e.components,n=Object(i.a)(e,["components"]);return Object(a.b)("wrapper",Object(r.a)({},u,n,{components:t,mdxType:"MDXLayout"}),Object(a.b)("h2",{id:"environment-variables"},"Environment Variables"),Object(a.b)("p",null,"The following are environment variables used by the app:"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},Object(a.b)("inlineCode",{parentName:"li"},"ELECTRON_START_URL")," ","[string]",": URL (e.g. ",Object(a.b)("inlineCode",{parentName:"li"},"http://localhost:3000"),") where the front end of the app is being hosted - also used in ",Object(a.b)("inlineCode",{parentName:"li"},"electron.js")," to indicate the app is running in dev mode"),Object(a.b)("li",{parentName:"ul"},Object(a.b)("inlineCode",{parentName:"li"},"EVENT_MARKER_PRODUCT_ID")," ","[string]",": The product ID of the event marker (e.g. ",Object(a.b)("inlineCode",{parentName:"li"},"0487"),").  If not set, it will use the ",Object(a.b)("inlineCode",{parentName:"li"},"productID")," set in ",Object(a.b)("inlineCode",{parentName:"li"},"public/config/trigger.js"),"."),Object(a.b)("li",{parentName:"ul"},Object(a.b)("inlineCode",{parentName:"li"},"REACT_APP_AT_HOME")," ","[boolean]",": whether the app is being used in home mode (true) or clinic mode (false)"),Object(a.b)("li",{parentName:"ul"},Object(a.b)("inlineCode",{parentName:"li"},"REACT_APP_PATIENT_ID")," ","[string]",": The default patient id to show when requesting a patient ID in ",Object(a.b)("inlineCode",{parentName:"li"},"userID"),".  If not set, no default is shown (blank input box).")),Object(a.b)("h2",{id:"usage-with-psiturk"},"Usage with PsiTurk"),Object(a.b)("p",null,"While this set up is optimized for Electron, we added functionality that will make use with PsiTurk easy. The application will detect if it's being used in a Turk environment and will:  "),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},"Save the data to the default PsiTurk SQLite database.  "),Object(a.b)("li",{parentName:"ul"},"Switch the language to Turk specific, if ",Object(a.b)("inlineCode",{parentName:"li"},"src/language/<locale>.mturk.json")," exists.  "),Object(a.b)("li",{parentName:"ul"},"Use the Turk specific timeline if different than the primary timeline.  ")),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Prebuilt version"),"\nWhen GitHub Actions is run, a psiturk build will be created automatically, and can be downloaded from its artifacts (skip next step if using)."),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Build instructions"),"\nTo set up your PsiTurk project, we provide a script that does the conversion.\nPsiTurk is a Python package used to manage HITs in Mechanical Turk. Before using the provided script, install ",Object(a.b)("a",{parentName:"p",href:"https://psiturk.org/"},"PsiTurk"),"."),Object(a.b)("p",null,"You'll need to follow these steps (the path to the PsiTurk project should be a directory you wish to be created):"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},Object(a.b)("p",{parentName:"li"},"Build the application: ",Object(a.b)("inlineCode",{parentName:"p"},"npm run build"),"  ")),Object(a.b)("li",{parentName:"ul"},Object(a.b)("p",{parentName:"li"},"Move to the ",Object(a.b)("inlineCode",{parentName:"p"},"psiturkit")," directory: ",Object(a.b)("inlineCode",{parentName:"p"},"cd psiturkit"))),Object(a.b)("li",{parentName:"ul"},Object(a.b)("p",{parentName:"li"},"If it's the first time you're running the script:",Object(a.b)("br",{parentName:"p"}),"\n",Object(a.b)("inlineCode",{parentName:"p"},"./psiturk-it -p <PATH_TO_NEW_PSITURK_PROJECT>"),"  ")),Object(a.b)("li",{parentName:"ul"},Object(a.b)("p",{parentName:"li"},"To update an existing PsiTurk project (the path to the PsiTurk project should already exist from the previous steps):",Object(a.b)("br",{parentName:"p"}),"\n",Object(a.b)("inlineCode",{parentName:"p"},"./psiturk-it -u -p <PATH_TO_NEW_PSITURK_PROJECT>")))),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Running psiturk"),"\nAfter that, just navigate to your newly created PsiTurk project directory."),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-shell"},"shell> psiturk #start psiturk\npsiturk> server on #start server\npsiturk> debug #debug mode\n")))}p.isMDXComponent=!0},86:function(e,t,n){"use strict";n.d(t,"a",(function(){return s})),n.d(t,"b",(function(){return m}));var r=n(0),i=n.n(r);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var u=i.a.createContext({}),p=function(e){var t=i.a.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},s=function(e){var t=p(e.components);return i.a.createElement(u.Provider,{value:t},e.children)},b={inlineCode:"code",wrapper:function(e){var t=e.children;return i.a.createElement(i.a.Fragment,{},t)}},d=i.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,o=e.parentName,u=c(e,["components","mdxType","originalType","parentName"]),s=p(n),d=r,m=s["".concat(o,".").concat(d)]||s[d]||b[d]||a;return n?i.a.createElement(m,l(l({ref:t},u),{},{components:n})):i.a.createElement(m,l({ref:t},u))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,o=new Array(a);o[0]=d;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l.mdxType="string"==typeof e?e:r,o[1]=l;for(var u=2;u<a;u++)o[u]=n[u];return i.a.createElement.apply(null,o)}return i.a.createElement.apply(null,n)}d.displayName="MDXCreateElement"}}]);